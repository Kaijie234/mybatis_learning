<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="tech.kaijie.dao.UserDao">
    <!--&lt;!&ndash;定义封装包含Account的User的resultMap（未使用延迟加载）&ndash;&gt;-->
    <!--<resultMap id="userMap" type="user">-->
        <!--<id property="id" column="id"></id>-->
        <!--<result property="username" column="username"></result>-->
        <!--<result property="birthday" column="birthday"></result>-->
        <!--<result property="sex" column="sex"></result>-->
        <!--<result property="address" column="address"></result>-->

        <!--&lt;!&ndash;配置user对象中account集合的映射&ndash;&gt;-->
        <!--&lt;!&ndash;与association不同，这里使用的ofType属性&ndash;&gt;-->
        <!--<collection property="accounts" ofType="account">-->
            <!--&lt;!&ndash;主键为id标签， 其余为result&ndash;&gt;-->
            <!--<id property="id" column="id"></id>-->
            <!--<result property="uid" column="uid"></result>-->
            <!--<result property="money" column="money"></result>-->
        <!--</collection>-->
    <!--</resultMap>-->

    <!--定义封装包含Account的User的resultMap（使用延迟加载）-->
    <resultMap id="userMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="birthday" column="birthday"></result>
        <result property="sex" column="sex"></result>
        <result property="address" column="address"></result>

        <!--配置user对象中account集合的映射
            collection 是用于建立一对多中集合属性的对应关系
            ofType 用于指定集合元素的数据类型
            select 是用于指定查询账户的唯一标识（账户的 dao 全限定类名加上方法名称）
            column 是用于指定使用哪个字段的值作为条件查询
        -->
        <collection property="accounts" ofType="account"
                    select="tech.kaijie.dao.AccountDao.findByUid" column="id">
        </collection>
    </resultMap>

    <!--查询所有用户信息，包括其所有的账户信息（未使用延迟加载）-->
    <!--<select id="findAll" resultMap="userMap">-->
        <!--select * from user u-->
        <!--LEFT OUTER JOIN account a-->
        <!--ON u.`id` = a.`UID`-->
    <!--</select>-->

    <!--查询所有用户信息，包括其所有的账户信息（使用延迟加载）-->
    <select id="findAll" resultMap="userMap">
        SELECT * FROM USER
    </select>

    <!--根据用户id，查询用户信息-->
    <select id="findById" resultType="user" parameterType="java.lang.Integer">
        SELECT * FROM USER WHERE id = #{id}
    </select>
</mapper>